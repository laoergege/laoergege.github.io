"use strict";(self.webpackChunklaoergege_blog=self.webpackChunklaoergege_blog||[]).push([[8278],{2952:(e,l,i)=>{i.r(l),i.d(l,{data:()=>n});const n={key:"v-199de1f8",path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/TTY.html",title:"TTY",lang:"zh-CN",frontmatter:{release:!0,tags:["tty","linux","unix","操作系统"]},excerpt:"",headers:[{level:2,title:"远程终端",slug:"远程终端",children:[]}],git:{createdTime:1663867943e3,updatedTime:1664388876e3,contributors:[{name:"连远生",email:"lianyuansheng@xiao100.com",commits:2}]}}},8938:(e,l,i)=>{i.r(l),i.d(l,{default:()=>g});var n=i(5393);const t=i.p+"assets/img/1663782356918.49be565d.png",a=i.p+"assets/img/1663783077209.09258804.png",s=(0,n._)("h1",{id:"tty",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#tty","aria-hidden":"true"},"#"),(0,n.Uk)(" TTY")],-1),r=(0,n._)("p",null,"推荐阅读",-1),o={href:"https://mp.weixin.qq.com/s/QgYoGRC0VyalT5rKnmE2Ww",target:"_blank",rel:"noopener noreferrer"},c=(0,n.Uk)("Linux 终端(TTY)"),d={href:"https://xie.infoq.cn/article/a6153354865c225bdce5bd55e",target:"_blank",rel:"noopener noreferrer"},p=(0,n.Uk)("理解 Linux 终端、终端模拟器和伪终端"),T={href:"http://www.linusakesson.net/programming/tty/",target:"_blank",rel:"noopener noreferrer"},u=(0,n.Uk)("The TTY demystified"),h=(0,n.uE)('<p>TL;DR：</p><ol><li>终端是一个附加在计算机上的输入输出设备；而过去 TTY (电传打字机 teletype 的缩写) 则是计算机一个文本输入输出的终端设备；</li><li>随着硬件终端逐渐演化成了软件的概念，出现了软件仿真终端，称为终端模拟器。如今 TTY 是计算机系统一个文本输入输出的虚拟终端的概念，运行在内核态的 TTY 都由一个特殊的设备文件 <code>/dev/tty[n]</code> 所表示，与这个虚拟终端的交互，是通过对这个设备文件的读写操作，以及使用 ioctl 系统调用操作这个设备文件进行的。通过执行 tty 命令可以查看代表当前虚拟终端的设备文件：<div class="language-bash ext-sh"><pre class="shiki" style="background-color:#ffffff;"><code><span class="line"><span style="color:#24292F;">$ tty</span></span>\n<span class="line"><span style="color:#24292F;">/dev/tty3</span></span>\n<span class="line"></span></code></pre></div></li><li>而 gnome-terminal 这类运行用户态的仿终端软件被称为伪终端 PTY（pseudo TTY），PTY 是通过打开特殊的设备文件 /dev/ptmx 创建，由一对双向的字符设备构成，称为 PTY master 和 PTY slave</li><li>比如启动 gnome-terminal 终端程序，一般会： <ul><li>先分配一个伪终端</li><li>让 gnome-terminal 持有 PTY master 的文件描述符 <code>/dev/ptmx</code></li><li>fork 一个 shell 子进程，并让 shell 持有 PTY slave 的设备文件 <code>/dev/pts/[n]</code></li><li>PTY master 和 PTY slave 之间通过 TTY 驱动会话交流</li><li>输入的命令由 shell 子进程执行</li><li><img src="'+t+'" alt="图 3"></li></ul></li><li>TTY 驱动包含的 line discipline 是一个逻辑组件。line discipline 主要有以下功能： <ul><li>缓存字符，回车发送</li><li>拦截处理一些特殊的功能键，发送进程信号，如当用户按 <code>CTRL+c</code> 时，它向连接到 PTY slave 的进程发送 <code>kill -2（SIGINT）</code> 信号</li></ul></li><li>可通过 <code>stty</code> 查看设置 TTY 的特征和 line discipline 规则</li></ol><h2 id="远程终端" tabindex="-1"><a class="header-anchor" href="#远程终端" aria-hidden="true">#</a> 远程终端</h2><blockquote><p>TODO: 实现一个远程终端玩具 <img src="'+a+'" alt="图 4"></p></blockquote>',4),m={},g=(0,i(3860).Z)(m,[["render",function(e,l){const i=(0,n.up)("ExternalLinkIcon");return(0,n.wg)(),(0,n.iD)("div",null,[s,(0,n._)("blockquote",null,[r,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",o,[c,(0,n.Wm)(i)])]),(0,n._)("li",null,[(0,n._)("a",d,[p,(0,n.Wm)(i)])]),(0,n._)("li",null,[(0,n._)("a",T,[u,(0,n.Wm)(i)])])])]),h])}]])},3860:(e,l)=>{l.Z=(e,l)=>{const i=e.__vccOpts||e;for(const[e,n]of l)i[e]=n;return i}}}]);