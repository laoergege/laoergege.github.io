"use strict";(self.webpackChunklaoergege_blog=self.webpackChunklaoergege_blog||[]).push([[1814],{7779:(l,e,i)=>{i.r(e),i.d(e,{data:()=>r});const r={key:"v-5e99732b",path:"/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86%E5%8F%8AWebAPI/Web%20%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html",title:"Web 前端性能优化",lang:"zh-CN",frontmatter:{release:!0,tags:["性能优化","web"],desc:"web 前端能优化知识体系"},excerpt:"",headers:[{level:2,title:"Web 性能指标",slug:"web-性能指标",children:[]},{level:2,title:"前端监控",slug:"前端监控",children:[{level:3,title:"前端异常分类及采集",slug:"前端异常分类及采集",children:[]},{level:3,title:"数据上报",slug:"数据上报",children:[]}]},{level:2,title:"Performance API",slug:"performance-api",children:[]},{level:2,title:"123",slug:"_123",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],git:{createdTime:165625254e4,updatedTime:1661172477e3,contributors:[{name:"连远生",email:"lianyuansheng@xiao100.com",commits:5}]}}},9147:(l,e,i)=>{i.r(e),i.d(e,{default:()=>Xl});var r=i(5393);const n=i.p+"assets/img/1650618189088.236e86db.png",t=i.p+"assets/img/WZM0n4aXah67lEyZugOT.d910edf3.svg",a=i.p+"assets/img/xKxwKagiz8RliuOI2Xtc.513f4d34.svg",u=i.p+"assets/img/1646409597237.dc5260df.png",o=(0,r._)("h1",{id:"web-前端性能优化",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#web-前端性能优化","aria-hidden":"true"},"#"),(0,r.Uk)(" Web 前端性能优化")],-1),p=(0,r._)("li",null,[(0,r.Uk)("制定性能指标 "),(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",{href:"#web-%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87"},"Web 性能指标")]),(0,r._)("li",null,"自定义性能指标")])],-1),s=(0,r.Uk)("前端工程：在本地或 CI 中进行性能预算测试 "),_=(0,r.Uk)("测试工具 "),h={href:"https://www.webpagetest.org/",target:"_blank",rel:"noopener noreferrer"},c=(0,r.Uk)("WebPageTest"),d={href:"https://web.dev/learn/#lighthouse",target:"_blank",rel:"noopener noreferrer"},k=(0,r.Uk)("lighthouse"),b={href:"https://github.com/GoogleChrome/lighthouse-ci",target:"_blank",rel:"noopener noreferrer"},g=(0,r.Uk)("lighthouse-ci"),m={href:"https://github.com/GoogleChrome/web-vitals-extension",target:"_blank",rel:"noopener noreferrer"},f=(0,r.Uk)("Web Vitals Chrome 扩展程序"),U={href:"https://pagespeed.web.dev/",target:"_blank",rel:"noopener noreferrer"},E=(0,r.Uk)("PageSpeed Insights"),w=(0,r.Uk)("：集成 Lighthouse 性能审计 + "),W={href:"https://developers.google.com/web/tools/chrome-user-experience-report/",target:"_blank",rel:"noopener noreferrer"},v=(0,r.Uk)("Chrome 用户体验报告"),C=(0,r.Uk)("体积大小 "),P={href:"https://github.com/ai/size-limit",target:"_blank",rel:"noopener noreferrer"},T=(0,r.Uk)("size-limit"),A={href:"https://github.com/siddharthkp/bundlesize",target:"_blank",rel:"noopener noreferrer"},F=(0,r.Uk)("bundlesize"),I=(0,r.Uk)("调试工具 "),D={href:"https://developer.chrome.com/docs/devtools/",target:"_blank",rel:"noopener noreferrer"},S=(0,r.Uk)("Chrome DevTools"),B=(0,r._)("li",null,[(0,r._)("a",{href:"#%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7"},"前端性能监控")],-1),y=(0,r.Uk)("性能优化策略"),L=(0,r._)("h2",{id:"web-性能指标",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#web-性能指标","aria-hidden":"true"},"#"),(0,r.Uk)(" Web 性能指标")],-1),x=(0,r.Uk)("性能指标分类 "),M=(0,r.Uk)("加载速度 "),R=(0,r._)("li",null,"Time to First Byte (TTFB)：第一个字节的响应时间",-1),z=(0,r._)("li",null,"First Paint（FP）首次绘制",-1),O={href:"https://web.dev/fcp/",target:"_blank",rel:"noopener noreferrer"},H=(0,r.Uk)("First Contentful Paint 首次内容绘制 (FCP)"),q=(0,r.Uk)("：文本、图像首次渲染出现的时间 "),j=(0,r._)("ul",null,[(0,r._)("li",null,[(0,r.Uk)("图像：图片、背景图、"),(0,r._)("code",null,"<svg>"),(0,r.Uk)(" 元素或非白色的 "),(0,r._)("code",null,"<canvas>"),(0,r.Uk)(" 元素")])],-1),J={href:"https://web.dev/lcp/",target:"_blank",rel:"noopener noreferrer"},Z=(0,r.Uk)("Largest Contentful Paint 最大内容绘制 (LCP)"),G=(0,r.Uk)("：视窗内最大的元素绘制的时间 "),K=(0,r._)("ul",null,[(0,r._)("li",null,"最大的元素：文本块、图像（图片、背景图）"),(0,r._)("li",null,[(0,r.Uk)("LCP 与 FCP 区别 "),(0,r._)("img",{src:n,alt:"图 12"})])],-1),V=(0,r._)("li",null,"FMP",-1),N=(0,r.Uk)("响应速度 "),X={href:"https://web.dev/fid/",target:"_blank",rel:"noopener noreferrer"},Q=(0,r.Uk)("First Input Delay 首次输入延迟 (FID)"),Y=(0,r.Uk)("：标识用户第一次与页面交互到浏览器真正能够开始处理事件处理程序以响应该交互的时间（不包括处理时间） "),$=(0,r._)("ul",null,[(0,r._)("li",null,"如果交互没有事件侦听器怎么办？测量接收到输入事件的时间点与主线程下一次空闲的时间点之间的差值"),(0,r._)("li",null,"FID 只关注不连续操作对应的输入事件，如点击、轻触和按键")],-1),ll={href:"https://web.dev/tti/",target:"_blank",rel:"noopener noreferrer"},el=(0,r.Uk)("Time to Interactive 可交互时间 (TTI)"),il=(0,r.Uk)("：表示网页首次完全达到可交互状态的时间点 "),rl=(0,r._)("ul",null,[(0,r._)("li",null,[(0,r.Uk)("TTI 在主线程至少有五秒钟没有长任务且不超过两个正在处理的网络 GET 请求时，即为最后一个长任务结束时间点，如果没有找到长任务，则相当于 FCP 的时间点。 "),(0,r._)("img",{src:t,alt:""})])],-1),nl={href:"https://web.dev/tbt/",target:"_blank",rel:"noopener noreferrer"},tl=(0,r.Uk)("Total Blocking Time 总阻塞时间 (TBT)"),al=(0,r.Uk)("：FCP 和 TTI 之间发生的每个长任务的阻塞时间总和，用于量化在页面交互性变为可靠前，不可交互程度的严重性 "),ul=(0,r._)("img",{src:a,alt:"图 16"},null,-1),ol=(0,r._)("li",null,"Long Task",-1),pl=(0,r.Uk)("页面稳定性 "),sl={href:"https://web.dev/cls/",target:"_blank",rel:"noopener noreferrer"},_l=(0,r.Uk)("Cumulative Layout Shift 累积布局偏移 (CLS)"),hl=(0,r._)("li",null,[(0,r.Uk)("画面流畅度 "),(0,r._)("ul",null,[(0,r._)("li",null,"帧率（FPS）")])],-1),cl=(0,r._)("li",null,"内存占用",-1),dl=(0,r._)("li",null,[(0,r.Uk)("以用户为中心的核心 Web 指标：Core Web Vitals "),(0,r._)("img",{src:"images/1651501624892.png",alt:"图 2"}),(0,r._)("blockquote",null,[(0,r._)("p",null,"其中 FID 无法在某些实验工具中测量，如 lighthouse 使用 TBT 代替 FID")])],-1),kl=(0,r._)("h2",{id:"前端监控",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#前端监控","aria-hidden":"true"},"#"),(0,r.Uk)(" 前端监控")],-1),bl=(0,r._)("li",null,[(0,r.Uk)("监控方式 "),(0,r._)("ul",null,[(0,r._)("li",null,"合成监控：场景模拟，在受控环境监控页面的性能"),(0,r._)("li",null,"真实用户监控：线上代码中注入脚本，上传真实用户场景数据")])],-1),gl=(0,r._)("li",null,[(0,r.Uk)("前端埋点 "),(0,r._)("ul",null,[(0,r._)("li",null,"代码埋点：前端开发人员在代码中自定义监听和收集"),(0,r._)("li",null,"可视化埋点"),(0,r._)("li",null,"无痕埋点（全埋点）：通过技术手段无差别地记录用户在前端页面上的行为，然后在后端数据清洗")])],-1),ml=(0,r.Uk)("数据采集 "),fl=(0,r.Uk)("前端性能指标采集方式 "),Ul=(0,r._)("li",null,"加载性能",-1),El=(0,r._)("li",null,[(0,r._)("a",{href:"#performance-api"},"Performance API")],-1),wl={href:"https://github.com/GoogleChrome/web-vitals",target:"_blank",rel:"noopener noreferrer"},Wl=(0,r.Uk)("web-vitals"),vl=(0,r.Uk)("：基于 Performance API 的 Web Vitals 封装"),Cl=(0,r._)("li",null,[(0,r.Uk)("前端异常分类及采集 "),(0,r._)("ul",null,[(0,r._)("li",null,"JS 错误"),(0,r._)("li",null,"promise"),(0,r._)("li",null,"资源加载失败"),(0,r._)("li",null,"网络请求失败")])],-1),Pl=(0,r.uE)("<li>数据上报 <ul><li>尽量不影响应用的性能</li><li>使用非阻塞 API，避免阻塞主线程</li><li>sendBeacon <ul><li>不受跨域限制</li><li>不阻塞页面</li></ul></li><li>requestIdleCallback</li><li>img</li></ul></li><li>数据清洗、持久</li><li>数据聚合、报告</li><li>报警通知</li>",4),Tl=(0,r.uE)('<h3 id="前端异常分类及采集" tabindex="-1"><a class="header-anchor" href="#前端异常分类及采集" aria-hidden="true">#</a> 前端异常分类及采集</h3><ul><li>前端异常分类 <ul><li>JS 错误 <ul><li>编译时（语法错误）</li><li>运行时</li></ul></li><li>Promise</li><li>资源加载、网络请求失败</li></ul></li><li>捕获错误 <ul><li><code>try ... catch ...</code></li></ul></li></ul><h3 id="数据上报" tabindex="-1"><a class="header-anchor" href="#数据上报" aria-hidden="true">#</a> 数据上报</h3><p>数据上报原则：</p><ul><li>尽量不影响应用的性能</li></ul><h2 id="performance-api" tabindex="-1"><a class="header-anchor" href="#performance-api" aria-hidden="true">#</a> Performance API</h2><p>Web 标准提供性能相关的 API 及继承关系如下图：</p><p><img src="'+u+'" alt="图 23"></p><ul><li>Performance API</li></ul><h2 id="_123" tabindex="-1"><a class="header-anchor" href="#_123" aria-hidden="true">#</a> 123</h2><p>DOMContentLoaded，这个事件发生后，说明页面已经构建好 DOM 了，这意味着构建 DOM 所需要的 HTML 文件、JavaScript 文件、CSS 文件都已经下载完成了。 Load，说明浏览器已经加载了所有的资源（图像、样式表等）</p><p>RTT 就是这里的往返时延。它是网络中一个重要的性能指标，表示从发送端发送数据开始，到发送端收到来自接收端的确认，总共经历的时延。通常 1 个 HTTP 的数据包在 14KB 左右，所以 1 个 0.1M 的页面就需要拆分成 8 个包来传输了，也就是说需要 8 个 RTT。</p><p>除 transform 或 opacity 属性之外，更改任何属性始终都会触发绘制。 坚持使用 transform 和 opacity 属性更改来实现动画。</p><p>使用 will-change 或 translateZ 提升移动的元素。 避免过度使用提升规则；各层都需要内存和管理开销。</p><p>降低选择器的复杂性；使用以类为中心的方法，例如 BEM。 减少必须计算其样式的元素数量。</p><p>计算元素的计算样式的最糟糕的开销情况是元素数量乘以选择器数量</p><p>减少打包时间：缩减范围、缓存副本、定向搜索、提前构建、并行构建、可视结构 减少打包体积：分割代码、摇树优化、动态垫片、按需加载ć作用提升、压缩资源</p><p>提交数据之后渲染进程会创建一个空白页面，我们通常把这段时间称为解析白屏，并等待 CSS 文件和 JavaScript 文件的加载完成，生成 CSSOM 和 DOM，然后合成布局树，最后还要经过一系列的步骤准备首次渲染。</p><p>RAIL</p><p>1、影响白屏时间的因素：网络，服务端性能，前端页面结构设计。 2、影响首屏时间的因素：白屏时间，资源下载执行时间。</p><ul><li>hints <ul><li>DNS 预解析（dns-prefetch）</li><li>预连接（preconnect）</li><li>prerender</li><li>prefetch</li><li>preload</li></ul></li><li>页面可见性</li><li>分片</li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',22),Al={href:"https://medium.com/jspoint/how-the-browser-renders-a-web-page-dom-cssom-and-rendering-df10531c9969",target:"_blank",rel:"noopener noreferrer"},Fl=(0,r.Uk)("How the browser renders a web page? — DOM, CSSOM, and Rendering"),Il={href:"https://jakearchibald.com/2016/link-in-body/",target:"_blank",rel:"noopener noreferrer"},Dl=(0,r.Uk)("The future of loading CSS"),Sl={href:"https://sia.codes/posts/render-blocking-resources/",target:"_blank",rel:"noopener noreferrer"},Bl=(0,r.Uk)("How to Eliminate Render-Blocking Resources: a Deep Dive"),yl={href:"https://web.dev/render-blocking-resources/",target:"_blank",rel:"noopener noreferrer"},Ll=(0,r.Uk)("Eliminate render-blocking resources"),xl={href:"https://calibreapp.com/blog/critical-request",target:"_blank",rel:"noopener noreferrer"},Ml=(0,r.Uk)("The Critical Request: How to Prioritise Requests to Improve Speed"),Rl={href:"https://sia.codes/posts/lighthouse-treemap/",target:"_blank",rel:"noopener noreferrer"},zl=(0,r.Uk)("Explore JavaScript Dependencies With Lighthouse Treemap"),Ol=(0,r._)("p",null,[(0,r.Uk)("不要@import 在样式表中使用来加载更多样式表。浏览器直到稍后才会发现它。最好"),(0,r._)("link"),(0,r.Uk)("在 HTML 中使用标签加载它们")],-1),Hl=(0,r.uE)("<li><p>webpack 构建优化</p><ul><li>减少打包时间：缩减范围、缓存副本、定向搜索、提前构建、并行构建、可视结构 <ul><li>配置 include/exclude 缩小 Loader 对文件的搜索范围</li><li>配置 cache 缓存 Loader 对文件的编译副本</li><li>配置 resolve 提高文件的搜索速度</li><li>并行构建 <ul><li>thread-loader</li></ul></li><li>配置 BundleAnalyzer 分析打包文件结构</li></ul></li><li>减少打包体积：分割代码、摇树优化、动态垫片、按需加载、作用提升、压缩资源 <ul><li>splitChunks</li><li>动态垫片：通过垫片服务根据 UA 返回当前浏览器代码垫片 <ul><li>polyfill.io/v3/polyfill.min.js</li><li>&quot;https://polyfill.alicdn.com/polyfill.min.js</li><li>压缩资源 <ul><li>js <ul><li>terser-webpack-plugin</li></ul></li></ul></li></ul></li></ul></li></ul></li>",1),ql=(0,r._)("p",null,"webpack",-1),jl=(0,r._)("li",null,[(0,r.Uk)("缩小 "),(0,r._)("ul",null,[(0,r._)("li",null,"mini-css-extract-plugin"),(0,r._)("li",null,"terser")])],-1),Jl=(0,r._)("li",null,"文本压缩",-1),Zl=(0,r._)("li",null,[(0,r.Uk)("压缩 "),(0,r._)("ul",null,[(0,r._)("li",null,"compression-webpack-plugin")])],-1),Gl={href:"https://github.com/webpack-contrib/webpack-bundle-analyzer",target:"_blank",rel:"noopener noreferrer"},Kl=(0,r.Uk)("Webpack Bundle Analyzer"),Vl=(0,r.uE)("<p>PRPL 模式</p><p>推送 (Push)（或预加载）最重要的资源。 尽快渲染 (Render) 初始路线。 预缓存 (Pre-cache) 剩余资产。 延迟加载 (Lazy load) 其他路线和非关键资产。</p><p>问题-原则-策略</p><p>Priority Hints</p><ul><li>preload</li><li>dns-prefetch</li><li>prefetch</li><li>preconnect</li><li>prerender</li><li>fetchpriority</li></ul><p>压缩/缩小、延迟加载（既阻塞又不占其他资源宽带） 优先关键 异步非关键 media preload =》 stylesheet 避免在 CSS 文件中使用 @import</p><p>代码拆分</p><ul><li><p>业务代码</p></li><li><p>公共代码</p></li><li><p>第三方代码</p><ul><li>运行时</li><li>库工具</li></ul></li><li><p>网络层</p></li><li><p>资源/包大小</p><ul><li>图像 <ul><li>格式</li><li>压缩</li><li>响应式图片 <ul><li><code>@media</code></li><li><code>image-set</code></li><li>imagesrcset &amp; imagesizes</li><li>延迟加载屏幕外图像</li></ul></li></ul></li></ul></li><li><p>代码优化</p></li></ul>",8),Nl={},Xl=(0,i(3860).Z)(Nl,[["render",function(l,e){const i=(0,r.up)("ExternalLinkIcon"),n=(0,r.up)("RouterLink");return(0,r.wg)(),(0,r.iD)("div",null,[o,(0,r._)("ul",null,[p,(0,r._)("li",null,[s,(0,r._)("ul",null,[(0,r._)("li",null,[_,(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",h,[c,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",d,[k,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",b,[g,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",m,[f,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",U,[E,(0,r.Wm)(i)]),w,(0,r._)("a",W,[v,(0,r.Wm)(i)])]),(0,r._)("li",null,[C,(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",P,[T,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",A,[F,(0,r.Wm)(i)])])])])])]),(0,r._)("li",null,[I,(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",D,[S,(0,r.Wm)(i)])])])])])]),B,(0,r._)("li",null,[(0,r.Wm)(n,{to:"/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86%E5%8F%8AWebAPI/Web%20%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5.html"},{default:(0,r.w5)((()=>[y])),_:1})])]),L,(0,r._)("ul",null,[(0,r._)("li",null,[x,(0,r._)("ul",null,[(0,r._)("li",null,[M,(0,r._)("ul",null,[R,z,(0,r._)("li",null,[(0,r._)("a",O,[H,(0,r.Wm)(i)]),q,j]),(0,r._)("li",null,[(0,r._)("a",J,[Z,(0,r.Wm)(i)]),G,K]),V])]),(0,r._)("li",null,[N,(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",X,[Q,(0,r.Wm)(i)]),Y,$]),(0,r._)("li",null,[(0,r._)("a",ll,[el,(0,r.Wm)(i)]),il,rl]),(0,r._)("li",null,[(0,r._)("a",nl,[tl,(0,r.Wm)(i)]),al,ul]),ol])]),(0,r._)("li",null,[pl,(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",sl,[_l,(0,r.Wm)(i)])])])]),hl,cl])]),dl]),kl,(0,r._)("ul",null,[bl,gl,(0,r._)("li",null,[ml,(0,r._)("ul",null,[(0,r._)("li",null,[fl,(0,r._)("ul",null,[Ul,El,(0,r._)("li",null,[(0,r._)("a",wl,[Wl,(0,r.Wm)(i)]),vl])])]),Cl])]),Pl]),Tl,(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",Al,[Fl,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",Il,[Dl,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",Sl,[Bl,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",yl,[Ll,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",xl,[Ml,(0,r.Wm)(i)])]),(0,r._)("li",null,[(0,r._)("a",Rl,[zl,(0,r.Wm)(i)])])]),Ol,(0,r._)("ul",null,[Hl,(0,r._)("li",null,[ql,(0,r._)("ul",null,[jl,Jl,Zl,(0,r._)("li",null,[(0,r._)("a",Gl,[Kl,(0,r.Wm)(i)])])])])]),Vl])}]])},3860:(l,e)=>{e.Z=(l,e)=>{const i=l.__vccOpts||l;for(const[l,r]of e)i[l]=r;return i}}}]);